class ball{
PVector location;
PVector velocity;
float x, y, r, v;
float xspeed = -5;

ball(){
  location = new PVector(0,300);
  velocity = new PVector(5,0);
  }

ball(int tempX, int tempY, int tempR, int tempV){
    x = tempX;
    y = tempY;
    r = tempR;
    v = tempV;
  }
  
void display() {
  background(255);
  stroke(0);
  fill(175);
  
  ellipse(location.x, location.y, 60, 60);
  
}

void display2(){
  background(255);
  stroke(0);
  fill(175);
  
  ellipse(x, y, r, v);
}

void checkEdges(){
  location.add(velocity);  
  if ((location.x > width) || (location.x < 0)) {
    velocity.x = velocity.x * -1;
  }
  
  if ((location.y > height) || (location.y < 0)) {
    velocity.y = velocity.y * -1;
  }
}

void checkEdges2(){
  if(x > width || x < 0){
    xspeed *= -1;
  }
}

void update(){
  x+=xspeed;
}
/*
 boolean overlaps(ball other){
    float d = dist(x/2, y/2, other.x, other.y);
    if (d < r + other.r) {
      return true;
    } else {
      return false;
    }
  }
*/

}

ball b1, b2;

void setup() {
  size(600,600);
  b1 = new ball();
  b2 = new ball(600, 300, 30, 30);
}

void draw(){
  b1.display();
  b1.checkEdges();
  
  b2.display2();
  b2.checkEdges2();
  b2.update(); 
}
